{"version":3,"sources":["App.js","components/Keypad.js","components/Result.js","components/Memory.js","serviceWorker.js","index.js"],"names":["App","onClick","button","calculate","reset","backspace","setState","memory","Number","state","result","checkResult","includes","replace","eval","e","slice","className","this","Component","Keypad","classsName","class","name","props","target","Result","Memory","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6733f2ba.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Keypad from './components/Keypad.js';\nimport Result from './components/Result.js';\nimport Memory from './components/Memory.js';\n\nclass App extends Component {\n  constructor(){\n      super();\n\n      this.state = {\n          result: \"\",\n          memory: \"\"\n      }\n  }\n\n  onClick = button => {\n\n      if(button === \"=\"){\n          this.calculate()\n      }\n\n      else if(button === \"C\"){\n          this.reset()\n      }\n      else if(button === \"CE\"){\n          this.backspace()\n      }\n      \n      else if(button === \"m+\"){\n          this.setState({\n              memory: Number(this.state.memory) + Number(this.state.result)\n          })\n          this.reset()\n      }\n      \n      else if(button === \"m-\"){\n          this.setState({\n              memory: Number(this.state.memory) - Number(this.state.result)\n          })\n          this.reset()\n      }\n\n      else if(button === \"MC\"){\n          this.setState({\n              memory: \"\"\n          })\n      }\n\n      else if(button === \"MR\"){\n          this.setState({\n              result: this.state.result + this.state.memory\n          })\n          \n      }\n\n      else {\n          this.setState({\n              result: this.state.result + button\n          })\n      }\n  };\n\n\n  calculate = () => {\n      var checkResult = ''\n      if(this.state.result.includes('--')){\n          checkResult = this.state.result.replace('--','+')\n      }\n\n      else {\n          checkResult = this.state.result\n      }\n\n      try {\n          this.setState({\n              result: (eval(checkResult) || \"\" ) + \"\"\n          })\n      } catch (e) {\n          this.setState({\n              result: \"error\"\n          })\n\n      }\n  };\n\n  reset = () => {\n      this.setState({\n          result: \"\"\n      })\n  };\n\n  backspace = () => {\n      this.setState({\n          result: this.state.result.slice(0, -1)\n      })\n  };\n\n  render() {\n  return (\n    <>\n    <h1>Calculator App</h1>\n    <div className=\"App\">\n      <div className=\"page-wrap\">\n            <div className=\"calc-wrap\">\n                <Result result={this.state.result}/>\n                <Keypad onClick={this.onClick}/> \n            </div>\n        <Memory memory={this.state.memory} />\n      </div>\n    \n    </div>\n    </>\n  );\n}\n}\nexport default App;\n","import React, {Component} from 'react';\nimport './Button.css';\n\nclass Keypad extends Component{\n\nrender() {\n    return (\n<div classsName =\"button\">\n          <div className=\"row\">\n            <button class=\"operator\" name=\"m+\" onClick={e => this.props.onClick(e.target.name)}>m+</button>\n            <button class=\"operator\" name=\"m-\" onClick={e => this.props.onClick(e.target.name)} >m-</button>\n            <button class=\"operator\" name=\"MC\" onClick={e => this.props.onClick(e.target.name)}>MC</button>\n            <button class=\"operator\" name=\"MR\" onClick={e => this.props.onClick(e.target.name)}>MR</button>\n          </div>\n          <div className=\"row\">\n            <button class=\"operator\" name=\"(\" onClick={e => this.props.onClick(e.target.name)}>(</button>\n            <button class=\"operator\" name=\"CE\" onClick={e => this.props.onClick(e.target.name)}>CE</button>\n            <button class=\"operator\" name=\")\" onClick={e => this.props.onClick(e.target.name)}>)</button>\n            <button class=\"operator\" name=\"C\" onClick={e => this.props.onClick(e.target.name)}>C</button>\n          </div>\n          <div className=\"row\">\n            <button class=\"button\" name=\"7\" onClick={e => this.props.onClick(e.target.name)}>7</button>\n            <button class=\"button\" name=\"8\" onClick={e => this.props.onClick(e.target.name)}>8</button>\n            <button class=\"button\" name=\"9\" onClick={e => this.props.onClick(e.target.name)}>9</button>\n            <button class=\"operator\" name=\"*\" onClick={e => this.props.onClick(e.target.name)}>x</button>\n          </div>\n          <div className=\"row\">\n            <button class=\"button\" name=\"4\" onClick={e => this.props.onClick(e.target.name)}>4</button>\n            <button class=\"button\" name=\"5\" onClick={e => this.props.onClick(e.target.name)}>5</button>\n            <button class=\"button\" name=\"6\" onClick={e => this.props.onClick(e.target.name)}>6</button>\n            <button class=\"operator\" name=\"-\" onClick={e => this.props.onClick(e.target.name)}>-</button>\n          </div>\n          <div className=\"row\">\n            <button class=\"button\" name=\"1\" onClick={e => this.props.onClick(e.target.name)}>1</button>\n            <button class=\"button\" name=\"2\" onClick={e => this.props.onClick(e.target.name)}>2</button>\n            <button class=\"button\" name=\"3\" onClick={e => this.props.onClick(e.target.name)}>3</button>\n            <button class=\"operator\" name=\"+\" onClick={e => this.props.onClick(e.target.name)}>+</button>\n          </div>\n          <div className=\"row\">\n            <button class=\"button\" name=\".\" onClick={e => this.props.onClick(e.target.name)}>.</button>\n            <button class=\"button\" name=\"0\" onClick={e => this.props.onClick(e.target.name)}>0</button>\n            <button class=\"operator\" name=\"=\" onClick={e => this.props.onClick(e.target.name)}>=</button>\n            <button class=\"operator\" name=\"/\" onClick={e => this.props.onClick(e.target.name)}>÷</button>\n          </div>\n        </div>\n        );\n    }\n}\n\nexport default Keypad;\n","import React, {Component} from 'react';\n\nclass Result extends Component {\n\n\n    render() {\n        let {result} = this.props;\n        return (\n            <div className=\"result\">\n                <p>{result}</p>\n            </div>\n    )\n        ;\n    }\n}\n\n\nexport default Result;","import React, {Component} from 'react';\n\nclass Memory extends Component{\n\n    render() {\n        let {memory} = this.props;\n        return (\n            <div className=\"memory\">\n                <p class=\"memoryTitle\"> Calculator Memory </p>\n                <p class=\"memoryValue\">{memory}</p>\n            </div>\n        )\n    }\n}\n\nexport default Memory;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}